<launch>
    <arg name="debug" default="false"/>
    <env if="$(arg debug)" name="ROSCONSOLE_CONFIG_FILE" value="$(find dsol)/launch/debug.conf"/>

    <arg name="tbb" default="0"/>
    <arg name="log" default="5"/>
    <arg name="vis" default="0"/>
    <arg name="rviz" default="false"/>
    <arg name="save" default="/tmp/dsol"/>
    <arg name="cell_size" default="21"/>
    <arg name="min_log_level" default="4"/>
    <arg name="also_log_to_console" default="true"/>
    <arg name="verbose_logging" default="-1"/>
    <arg name="data" default="d435i"/>
    <arg name="do_rectification" default="false"/>
    <arg name="calib_dir" default=""/>
    <arg name="slam_pose_topic" default="/visual/pose"/>
    <arg name="need_robot_tf" default="false"/>
    <arg name="publish_tf" default="true"/>
    <arg name="invert_tf" default="false"/>
    <arg name="transform_publish_period" default="0.05"/>
    <arg name="odom_frame" default="odom"/>

    <arg name="camera" default="/camera"/>
    <arg name="use_depth" default="false"/>
    <arg name="use_stereo" default="true"/>

    <node pkg="dsol" type="sv_dsol_node_odom" name="dsol_odom" output="screen">
        <rosparam command="load" file="$(find dsol)/config/dsol.yaml"/>
        <rosparam command="load" file="$(find dsol)/config/dsol_$(arg data).yaml"/>

        <param name="tbb" type="int" value="$(arg tbb)"/>
        <param name="log" type="int" value="$(arg log)"/>
        <param name="vis" type="int" value="$(arg vis)"/>
        <param name="save" type="string" value="$(arg save)"/>
        <param name="cell_size" type="int" value="$(arg cell_size)"/>
        <param name="min_log_level" type="int" value="$(arg min_log_level)"/>
        <param name="also_log_to_console" type="bool" value="$(arg also_log_to_console)"/>
        <param name="verbose_logging" type="int" value="$(arg verbose_logging)"/>
        <param name="use_depth" type="bool" value="$(arg use_depth)"/>
        <param name="use_stereo" type="bool" value="$(arg use_stereo)"/>
        <param name="data" type="string" value="$(arg data)"/>
        <param name="do_rectification" type="bool" value="$(arg do_rectification)"/>
        <param name="calib_dir" type="string" value="$(arg calib_dir)"/>
        <param name="publish_tf" type="bool" value="$(arg publish_tf)"/>
        <param name="invert_tf" type="bool" value="$(arg invert_tf)"/>
        <param name="transform_publish_period" type="double" value="$(arg transform_publish_period)"/>
        <param name="odom_frame" type="string" value="$(arg odom_frame)"/>

        <remap from="~cinfo0" to="$(arg camera)/infra1/camera_info"/>
        <remap from="~cinfo1" to="$(arg camera)/infra2/camera_info"/>
        <remap from="~image0" to="$(arg camera)/infra1/image_rect_raw"/>
        <remap from="~image1" to="$(arg camera)/infra2/image_rect_raw"/>
        <remap from="~depth0" to="$(arg camera)/depth/image_rect_raw"/>
        <!-- <remap from="~gyr" to="$(arg camera)/gyro/sample"/> -->
        <remap from="~gyr" to="$(arg camera)/imu"/>
        <remap from="/slam_pose_topic" to="$(arg slam_pose_topic)"/>
    </node>

    <!-- Visualization.-->
    <group if="$(arg rviz)">
        <node pkg="rviz" type="rviz" name="dsol_rviz" output="screen" args="-d $(find dsol)/launch/dsol_odom.rviz">
        </node>
    </group>

    <group if="$(arg need_robot_tf)">
        <include file="$(find closedloop_nav_slam)/launch/robot_state_publisher.launch">
            <arg name="enable_odom_tf" value="true"/>
        </include>
    </group>
</launch>